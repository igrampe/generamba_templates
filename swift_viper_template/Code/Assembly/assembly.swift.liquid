{% include 'header' %}

import Foundation
import Swinject
import ViperStackSwift

public class {{ prefix }}{{ module_info.name }}Assembly: Assembly {
    public func assemble(container: Container) {
        container.register({{ prefix }}{{ module_info.name }}Interactor.self) { (r, presenter: {{ prefix }}{{ module_info.name }}Presenter) in
            let interactor = {{ prefix }}{{ module_info.name }}Interactor()
            interactor.output = presenter
            
            return interactor
        }
        
        container.register({{ prefix }}{{ module_info.name }}Router.self) { (r, view: TransitionHandler) in
            let router = {{ prefix }}{{ module_info.name }}Router()
            router.transitionHandler = view
            return router
        }
        
        container.register({{ prefix }}{{ module_info.name }}Presenter.self) { (r, view: {{ prefix }}{{ module_info.name }}ViewInput) in
            let presenter = {{ prefix }}{{ module_info.name }}Presenter()
            presenter.view = view
            presenter.interactor = r.resolve({{ prefix }}{{ module_info.name }}Interactor.self, argument: presenter)
            return presenter
        }.initCompleted { (r, presenter) in
            if let view = presenter.view as? TransitionHandler {
                presenter.router = r.resolve({{ prefix }}{{ module_info.name }}Router.self, argument: view)
            }
        }
        
        container.register({{ prefix }}{{ module_info.name }}View.self) { (r) in
            let view = {{ prefix }}{{ module_info.name }}View()
            view.output = r.resolve({{ prefix }}{{ module_info.name }}Presenter.self, argument: view as {{ prefix }}{{ module_info.name }}ViewInput)
            view.moduleInput = r.resolve({{ prefix }}{{ module_info.name }}Presenter.self, argument: view as {{ prefix }}{{ module_info.name }}ViewInput)
            
            return view
        }
    }
    
    class var assembler: Assembler {
        return Assembler([
            // Add child asseblies
            ])
    }
}
